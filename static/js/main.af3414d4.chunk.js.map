{"version":3,"sources":["Pages/Home/index.js","Pages/Recipe/index.js","components/Form/index.js","Pages/Create/index.js","Pages/Edit/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Home","recipes","this","props","className","to","map","item","key","id","title","Component","Recipe","handleRemove","bind","window","confirm","handleRemoveRecipe","history","push","match","recipe","find","params","onClick","ingredients","index","directions","Form","state","uuid","join","errorMessage","handleSubmit","handleInputChange","e","preventDefault","split","type","handleCreateRecipe","handleUpdateRecipe","setState","target","name","value","formType","htmlFor","onChange","cols","rows","Create","Edit","Header","App","recipesJSON","localStorage","getItem","JSON","parse","newArray","setItem","stringify","filter","path","exact","render","routeProps","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af3414d4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport './style.css'\n\nexport default class Home extends Component {\n    render() {\n        const {\n            recipes\n        } = this.props\n        return (\n            <div className=\"Home\">\n                <Link to=\"create\" className=\"create-button\">Create New Recipe</Link>\n                <ul>\n                    {recipes.map(item => (\n                        <li key={item.id}>\n                            <h2>\n                                <Link to={`/recipe/${item.id}`}>{item.title}</Link>\n                            </h2>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport './style.css'\n\nexport default class Recipe extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleRemove = this.handleRemove.bind(this)\n    }\n    handleRemove(id) {\n        if (window.confirm('Are you sure? Remove this Recipe')) {\n            this.props.handleRemoveRecipe(id)\n            this.props.history.push('/')\n        }\n    }\n\n    render() {\n        const {\n            recipes,\n            match\n        } = this.props\n        const recipe = recipes.find(item => item.id === match.params.id)\n        if (recipe) {\n            return (\n                <div className=\"Recipe\">\n                    <div className=\"header\">\n                        <h2>{recipe.title}</h2>\n                        <div>\n                            <Link to={`/edit/${recipe.id}`}>Edit</Link>\n                            <button className=\"remove-item\" onClick={() => this.handleRemove(recipe.id)}>Remove</button>\n                        </div>\n                    </div>\n                    <div>\n                        <h3>Ingredients:</h3>\n                        <ul>\n                            {recipe.ingredients.map((item, index) => (<li key={index}>{item}</li>))}\n                        </ul>\n                    </div>\n                    <div>\n                        <h3>Directions:</h3>\n                        <ol>\n                            {recipe.directions.map((item, index) => (<li key={index}>{item}</li>))}\n                        </ol>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>Loading...</div>\n            )\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport { v4 as uuid } from 'uuid';\n\nimport './style.css'\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.id || uuid(),\n            title: this.props.title || '',\n            ingredients: this.props.ingredients ? this.props.ingredients.join(' \\\\ ') : '',\n            directions: this.props.directions ? this.props.directions.join(' \\\\ ') : '',\n            errorMessage: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleRemove = this.handleRemove.bind(this)\n    }\n    handleSubmit(e) {\n        const {\n            id,\n            title,\n            ingredients,\n            directions\n        } = this.state\n        e.preventDefault()\n        if (title !== '' && ingredients !== '' && directions !== '') {\n            const recipe = {\n                id,\n                title,\n                ingredients: ingredients.split('\\\\'),\n                directions: directions.split('\\\\')\n            }\n            if (this.props.type === 'create') {\n                this.props.handleCreateRecipe(recipe)\n                this.props.history.push('/')\n            }\n            if (this.props.type === 'edit') {\n                this.props.handleUpdateRecipe(id, recipe)\n                this.props.history.push(`/recipe/${id}`)\n            }\n        } else {\n            this.setState({\n                errorMessage: true\n            })\n        }\n    }\n    handleInputChange(e) {\n        const target = e.target\n        this.setState({\n            [target.name]: target.value\n        });\n    }\n    handleRemove(e) {\n        e.preventDefault()\n        if (window.confirm('Are you sure? Remove this Recipe')) {\n            this.props.handleRemoveRecipe(this.props.id)\n            this.props.history.push('/')\n        }\n    }\n\n    render() {\n        const { type } = this.props\n        const formType = type === 'create' ? 'Create' : 'Save'\n        const {\n            title,\n            ingredients,\n            directions,\n            errorMessage\n        } = this.state\n        return (\n            <div className=\"Form\">\n                <form>\n                    {errorMessage && <p className=\"error-message\">Please fill form.</p>}\n                    <div className=\"label\">\n                        <label htmlFor=\"title\">Recipe Title</label>\n                    </div>\n                    <div className=\"input\">\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            id=\"title\"\n                            value={title}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <div className=\"label\">\n                        <label htmlFor=\"ingredients\">Ingredients</label>\n                    </div>\n                    <div className=\"textarea\">\n                        <textarea\n                            name=\"ingredients\"\n                            id=\"ingredients\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            value={ingredients}\n                            onChange={this.handleInputChange}\n                        ></textarea>\n                    </div>\n                    <div className=\"label\">\n                        <label htmlFor=\"directions\">Directions</label>\n                    </div>\n                    <div className=\"textarea\">\n                        <textarea\n                            name=\"directions\"\n                            id=\"directions\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            value={directions}\n                            onChange={this.handleInputChange}\n                        ></textarea>\n                    </div>\n                    <div className=\"button-group\">\n                        <button\n                            onClick={this.handleSubmit}>{formType}</button>\n                        {formType === 'Save' && <button onClick={this.handleRemove}>Remove</button>}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './style.css'\nimport Form from '../../components/Form'\n\nexport default class Create extends Component {\n    render() {\n        return (\n            <div className=\"Create\">\n                <h2>Create New Recipe</h2>\n                <Form type=\"create\" {...this.props} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Form from '../../components/Form'\nimport './style.css'\n\nexport default class Edit extends Component {\n    render() {\n        const {\n            match,\n            recipes\n        } = this.props\n        const recipe = recipes.find(item => item.id === match.params.id)\n        if (recipe) {\n            return (\n                <div className=\"Edit\">\n                    <h2>Edit Recipe</h2>\n                    <Form \n                        type=\"edit\"\n                        {...recipe}\n                        {...this.props}\n                        />\n                </div>\n            )\n        } else {\n            return (\n                <div>Loading...</div>\n            )\n        }\n    }\n}","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport './style.css'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Link to=\"/\"><h1>The Recipe Box</h1></Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport './style.css'\n\nimport Home from '../../Pages/Home'\nimport Recipe from '../../Pages/Recipe'\nimport Create from '../../Pages/Create'\nimport Edit from '../../Pages/Edit'\n\nimport Header from '../../components/Header'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            recipes: []\n        }\n        this.handleCreateRecipe = this.handleCreateRecipe.bind(this)\n        this.handleUpdateRecipe = this.handleUpdateRecipe.bind(this)\n        this.handleRemoveRecipe = this.handleRemoveRecipe.bind(this)\n    }\n    componentDidMount() {\n        const recipesJSON = localStorage.getItem('recipes')\n        if (recipesJSON) {\n            this.setState({\n                recipes: JSON.parse(recipesJSON)\n            })\n        }\n    }\n\n    handleCreateRecipe(recipe) {\n        this.setState(state => {\n            const newArray = [...state.recipes, recipe]\n            localStorage.setItem('recipes', JSON.stringify(newArray))\n            return {\n                recipes: newArray\n            }\n        })\n    }\n    handleUpdateRecipe(id, recipe) {\n        this.setState(state => {\n            const newArray = state.recipes.map(item => {\n                if (item.id === id) {\n                    return recipe\n                } else {\n                    return item\n                }\n            })\n            localStorage.setItem('recipes', JSON.stringify(newArray))\n            return {\n                recipes: newArray\n            }\n        })\n    }\n    handleRemoveRecipe(id) {\n        this.setState(state =>{\n            const newArray = state.recipes.filter(item => item.id !== id)\n            localStorage.setItem('recipes', JSON.stringify(newArray))\n            return {\n                recipes: newArray\n            }\n        })\n    }\n\n    render() {\n        const { recipes } = this.state\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Header />\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            render={routeProps => (\n                                <Home\n                                    {...routeProps}\n                                    recipes={recipes}\n                                />)}\n                        />\n                        <Route\n                            path=\"/recipe/:id\"\n                            render={routeProps => (\n                                <Recipe\n                                    {...routeProps}\n                                    recipes={recipes}\n                                    handleRemoveRecipe={this.handleRemoveRecipe}\n                                />)}\n                        />\n                        <Route\n                            path=\"/create\"\n                            render={routeProps => (\n                                <Create\n                                    {...routeProps}\n                                    handleCreateRecipe={this.handleCreateRecipe}\n                                />)}\n                        />\n                        <Route\n                            path=\"/edit/:id\"\n                            render={routeProps => (\n                                <Edit\n                                    {...routeProps}\n                                    recipes={recipes}\n                                    handleUpdateRecipe={this.handleUpdateRecipe}\n                                    handleRemoveRecipe={this.handleRemoveRecipe}\n                                />\n                            )}\n                        />\n                        <Route>\n                            <Redirect to=\"/\" />\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}